.\"Modified from man(1) of FreeBSD, the NetBSD mdoc.template, and mdoc.samples.
.\"See Also:
.\"man mdoc.samples for a complete listing of options
.\"man mdoc for the short list of editing options
.\"/usr/share/misc/mdoc.template
.Dd 07/11/22               \" DATE
.Dt _PRINTF 3      \" Program name and manual section number
.Os RyuJak
.Sh NAME                 \" Section Header - required - don't modify
.Nm _printf - format and print data
.\" The following lines are read in generating the apropos(man -k) database. Use only key
.\" words here as the database is built based on the words here and in the .ND line.
.\"--> .Nm Other_name_for_same_program(),
.\"--> .Nm Yet another name for the same program.
.\" Use .Nm macro to designate other names for the documented program.
.\" .Nd This line parsed for whatis database.
.Sh SYNOPSIS             \" Section Header - required - don't modify
.Nm _printf \fB FORMAT\fR
.Op \fB ARGUMENT \fR             \" [-abcd]
\fB . . . \fR


.B \fB #include "main.h" \fR

.B \fB int _printf(const char *
.I format, \fR
.B  . . .);

                            \" [-a path]
.\".Op Ar file              \" [file]
.\".Op Ar                   \" [file ...]
.\".Ar arg0                 \" Underlined argument - use .Ar anywhere to underline
.\"arg2 ...                 \" Arguments
.Sh DESCRIPTION
.Nm _printf() \" Section Header - required - don't modify
.\ft Prints to standard output under the control of a format string that specifies how subsequent arguments are converted for output.

.Sh Format of the format string
.Pp
    The format string is composed of 0 or more directives 
    (ordinary characters that are not %), 
    which are copied to the output stream.
.Pp
    The format string is also composed of conversion specifications,
    each of which result in fetching zero or more subsequent arguments. 
.Pp    
    Each conversion specification is introduced by the character % 
    and ends with the conversion specifier. 
.Pp    
    The argument must correspond properly with the conversion specifier. 
    By default, the arguments are used in the order given.


.Sh Conversion Specifiers
    A character that specifies the type of conversion to be applied. 
    The conversion specifiers and their meanings are:
.Pp      
    \fB c :\fR The int argument is converted to an \fI unsigned char \fR, 
    then the resulting character is written.
.Pp
    \fB s :\fR The \fI const char *\fR argument is expected to be a pointer 
    to an array of character type (pointer to a string). 
    Characters from the array are written up to a terminating null byte, 
    but do ot include the terminating null byte.
.Pp 
    \fB d, i :\fR The int argument is converted to signed decimal notation.
.Pp
    \fB % :\fR  A '%' is written but no argument is converted. 
    The complete version specification is '%%'
.Pp
.\" .Sh ENVIRONMENT      \" May not be needed
.\" .Bl -tag -width "ENV_VAR_1" -indent \" ENV_VAR_1 is width of the string ENV_VAR_1
.\" .It Ev ENV_VAR_1
.\" Description of ENV_VAR_1
.\" .It Ev ENV_VAR_2
.\" Description of ENV_VAR_2
.\" .El
.Sh Return value
    On successful return, these functions return the number of characters
    printed, excluding the null byte used to end output to strings. 
.Pp
    If an output error is encountered, a negative value is returned.
.El                      \" Ends the list
.\" .Sh DIAGNOSTICS       \" May not be needed
.\" .Bl -diag
.\" .It Diagnostic Tag
.\" Diagnostic informtion here.
.\" .It Diagnostic Tag
.\" Diagnostic informtion here.
.\" .El
.Sh SEE ALSO
.\" List links in ascending order by section, alphabetically within a section.
.\" Please do not reference files that do not exist without filing a bug report
.Xr printf(3)
.Sh BUGS
No known bugs.
.Sh AUTHOR
EDU RAMOS, KEVIN ESPINOZA.

.\" .Sh BUGS              \" Document known, unremedied bugs
.\" .Sh HISTORY           \" Document history if command behaves in a unique manner
